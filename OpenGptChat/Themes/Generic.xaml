<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:OpenGptChat"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:controls="clr-namespace:OpenGptChat.Controls">
    
    <sys:Double x:Key="NormalFontSize">14</sys:Double>
    <sys:Double x:Key="SmallFontSize">12</sys:Double>
    <sys:Double x:Key="LargeFontSize">16</sys:Double>
    <sys:Double x:Key="ExtremLargeFontSize">18</sys:Double>

    <CircleEase x:Key="ease" EasingMode="EaseOut"/>


    <Style TargetType="{x:Type controls:NoteControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NoteControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderTransform="{TemplateBinding ContentRenderTransform}"
                            CornerRadius="0 0 3 3" Padding="5 3">
                        <TextBlock Text="{TemplateBinding Text}" TextWrapping="Wrap"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ChatBubble}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ChatBubble}">
                    <StackPanel Margin="0 5" Background="{TemplateBinding Background}">
                        <TextBox HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Username}"
                                 FontSize="{DynamicResource SmallFontSize}" Foreground="{TemplateBinding HeaderForeground}" Background="{TemplateBinding HeaderBackground}"
                                 IsReadOnly="True" BorderThickness="0" TextWrapping="Wrap"/>
                        <Border x:Name="chatBubble" HorizontalAlignment="Stretch" Background="{TemplateBinding ContentBackground}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Padding="5">
                            <StackPanel HorizontalAlignment="Stretch">
                                <TextBox HorizontalAlignment="Stretch"
                                         Text="{Binding Content,RelativeSource={RelativeSource Mode=TemplatedParent}}" IsReadOnly="{TemplateBinding IsReadonly}" 
                                         BorderThickness="0" Background="Transparent" TextWrapping="Wrap" AcceptsReturn="True" Foreground="{TemplateBinding ContentForeground}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ConditionalControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ConditionalControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="elementWhileTrue" Content="{TemplateBinding ElementWhileTrue}">
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Condition}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Condition}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>

                            <ContentPresenter x:Name="elementWhileFalse" Content="{TemplateBinding ElementWhileFalse}">
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Condition}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Condition}" Value="False">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
